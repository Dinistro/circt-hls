#!/usr/bin/env bash

# Script used to lower a kernel file and create a HLT wrapper for it.

# First argument is the testbench C file to lower. We expect the testbench/kernel
# pair to be named
# - kernel: ${kernel.c}
# - tb:     tst_${kernel}.c

set -e
sourceDir=$(dirname $1)
basename=${1##*/}
basename=${basename%.*}

# Fail if basename is not prefixed with "tst_"
if [[ "$basename" != "tst_"* ]]; then
    echo "ERROR: Testbench file name must be prefixed with 'tst_'"
    exit 1
fi

# remove the "tst_" prefix from basename
kernel_basename=${basename#tst_}
kernel_file="$sourceDir/$kernel_basename.c"

# Fail if kernel_file doesn't exist
if [ ! -f "$kernel_file" ]; then
    echo "ERROR: Kernel file '$kernel_file' does not exist"
    exit 1
fi

# Run incremental lowering on the kernel file
@CIRCT_HLS_TOOLS_DIR@/dyn_incrementally_lower $kernel_file

handshake_kernel="${kernel_basename}_handshake.mlir"
firrtl_kernel="${kernel_basename}_firrtl.mlir"
func_kernel="${kernel_basename}_std.mlir"

# fail if handshake_kernel or firrtl_kernel doesn't exist
if [ ! -f "$handshake_kernel" ]; then
    echo "ERROR: Handshake kernel file '$handshake_kernel' does not exist"
    exit 1
fi
if [ ! -f "$firrtl_kernel" ]; then
    echo "ERROR: FIRRTL kernel file '$firrtl_kernel' does not exist"
    exit 1
fi
if [ ! -f "$func_kernel" ]; then
    echo "ERROR: Function kernel file '$func_kernel' does not exist"
    exit 1
fi

# For debugging purposes; makes it easy to copy the arguments into an IED
# for further debug.
wrapgenArgs="\
--func ${func_kernel} \
--ref ${handshake_kernel} \
--kernel ${firrtl_kernel} \
--name ${kernel_basename} \
--type=handshakeFIRRTL -o ."

echo "Running 'hlt-wrapgen ${wrapgenArgs}'" >&2
@CIRCT_HLS_TOOLS_DIR@/hlt-wrapgen ${wrapgenArgs}
